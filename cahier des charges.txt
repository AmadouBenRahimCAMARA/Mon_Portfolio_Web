Cahier des charges – Portfolio One-Page d’Amadou Ben Rahim CAMARA
Objectifs
Le site doit servir de vitrine personnelle pour Amadou Camara, en valorisant son profil de développeur full-stack passionné (front-end et back-end), ses compétences techniques et son projet de gestion de tontines. L’objectif est de démarquer son profil auprès de recruteurs et partenaires potentiels, en démontrant sa créativité et sa maîtrise technique
mastercaweb.unistra.fr
. Conformément aux meilleures pratiques d’un one-page, l’interface proposera une navigation fluide en scroll qui raconte son parcours et ses réalisations de façon narrative
fourthwall.com
fourthwall.com
. Ce format minimaliste simplifie l’expérience utilisateur (UX) et optimise le temps de chargement, essentiel pour l’engagement et le référencement
fourthwall.com
fourthwall.com
. En résumé, le site doit permettre de présenter rapidement et efficacement :
Sa présentation personnelle (nom, titre « développeur full-stack », photo, accroche),
Ses compétences clés (HTML, CSS, JavaScript, ReactJS, PHP, Laravel, Postgres, UML, Git/GitHub),
Son projet de gestion de tontines (objectifs, technologies utilisées, visuels),
Son parcours académique (formation, diplômes),
Ses langues parlées et centres d’intérêt.
Public visé
Le site s’adresse principalement aux recruteurs et employeurs du secteur informatique (entreprises, startups, agences), ainsi qu’à toute personne intéressée par son profil technique. Il vise également la communauté tech et des futurs collaborateurs, en adaptant le discours (langage clair, exemples concrets) au public francophone et anglophone du monde du développement. Comme le souligne un guide de design web, il faut d’abord « définir votre public cible » et orienter le contenu en conséquence : pour un portfolio, il convient de mettre en avant le travail effectué afin de capter l’attention de futurs clients ou employeurs
fourthwall.com
. Ainsi, le site sera conçu pour capter l’intérêt d’un auditoire « métier », tout en restant accessible au grand public intéressé par le projet personnel.
Architecture de la page
Le site sera une page unique à sections ancrées (anchor links) formant un parcours vertical cohérent. La structure proposée :
Bannière d’en-tête fixe en haut : photo de profil/illustration, nom, fonction (p.ex. « Développeur Logiciel Full-Stack ») et menu de navigation ancré.
Section « À propos » : présentation brève (texte sur parcours, passions) et éventuelle photo ou avatar.
Compétences : listing de ses savoir-faire (HTML, CSS, JavaScript, ReactJS, PHP, Laravel, Postgres, UML, Git/GitHub) sous forme d’icônes ou graphiques.
Projets : description détaillée du projet de gestion de tontines (objectifs, capture d’écran ou maquette, technologies utilisées). Chaque projet mis en avant selon les recommandations : objectif, technologies (HTML, CSS, JS, React, etc.) et lien GitHub
mastercaweb.unistra.fr
.
Formation : cursus académique (Licence en informatique IS à Bobo-Dioulasso, etc.).
Langues & Centres d’intérêt : liste des langues (français, anglais, autres) et hobbies (musique, sports, etc.).
Contact : coordonnées (e-mail professionnel), liens vers GitHub/GitLab, LinkedIn, éventuellement formulaire de contact. Un pied de page discret mentionnera les liens légaux (mentions légales, etc.).
Cette architecture suit les conseils UX de planification de contenu : chaque section s’enchaîne logiquement pour guider l’utilisateur « dans un récit fluide » au fil du scroll
fourthwall.com
. La navigation est « one-page » : des liens dans le menu mènent aux différentes ancres, assurant une expérience utilisateur continue et intuitive.
Contenu
Le contenu textuel et visuel à prévoir inclut notamment :
En-tête / Présentation : Nom complet (Amadou Ben Rahim Camara), photo ou avatar professionnel, fonction (ex. « Développeur Front-End/Back-End »), courte phrase d’accroche (passion pour le développement, vision).
À propos : biographie courte (étudiant en fin de licence informatique, passionné de dev, valeurs personnelles).
Compétences techniques : listes ou graphiques des technologies maîtrisées (HTML5, CSS3, JavaScript ES6, ReactJS, PHP, Laravel, PostgreSQL, UML, Git/GitHub). Pour les données visuelles (icônes, barres de compétences), penser à l’accessibilité (couleurs contrastées, textes alternatifs).
Projets / Réalisations : au moins 1 projet majeur – gestion de tontines (description du projet, capture d’écran ou maquette, objectifs, technologies utilisées). Suivre la recommandation d’illustrer chaque projet avec un descriptif concis, les techs employées, et un lien vers le code/source
mastercaweb.unistra.fr
.
Formation : détails des études (ex. Licence Ingénierie des SI(Systèmes d'Information) à Université de Nazi Boni – campus de Bobo-Dioulasso, baccalauréat, certificats éventuels).
Langues : langues parlées et niveau (ex. Français natif, Anglais courant).
Centres d’intérêt : passions hors tech pour humaniser le profil (ex. sports, musique, lecture).
Coordonnées & Réseaux : e-mail professionnel, liens GitHub/GitLab, LinkedIn. Comme conseillé, on liste clairement « vos coordonnées et vos réseaux sociaux »
baleez.net
 pour faciliter le contact.
Les contenus seront hiérarchisés (titres, listes) pour une lecture rapide, et rédigés en français clair (avec un résumé en anglais possible). Les visuels (photos, icônes, captures) seront optimisés (taille réduite, format web) afin de ne pas alourdir la page.
Technologies recommandées
Pour construire ce portfolio, on privilégie des technologies modernes et légères :
Front-end : HTML5, CSS3 (possiblement Sass/SCSS ou un framework CSS léger), JavaScript (ES6+). Une bibliothèque front-end comme ReactJS ou un générateur statique (Next.js, Gatsby) peut être utilisée pour la réactivité et la modularité du site.
Back-end / Intégration (optionnel) : si un formulaire de contact dynamique est nécessaire, on peut recourir à PHP avec le framework Laravel ou Node.js. La base de données PostgreSQL peut stocker des données utilisateur (par ex. messages) si besoin.
Contrôle de version : Git et dépôt GitHub/GitLab pour versionner le projet et faciliter les mises à jour.
Conception & prototypage : outils comme Figma ou Adobe XD pour maquetter l’UI/UX avant dev, et UML pour modéliser l’architecture si le projet évolue en applicatif.
Accessibilité & performance : utiliser des normes comme WCAG pour l’accessibilité et optimiser la performance (minification du code, compression des images) pour le SEO.
Ces choix techniques permettent d’exploiter les compétences du candidat (ReactJS, PHP/Laravel, Postgres, UML, Git) tout en assurant un site moderne. Comme suggéré pour les projets, chaque technologie employée sera documentée sur le site
mastercaweb.unistra.fr
 (ex. mention « Réalisé avec React, Node.js, etc. »).
Identité visuelle
La charte graphique visera un style moderne, branché et épuré, avec :
Palette de couleurs : base très sombre (noir ou gris anthracite) avec accents de bleu vif et touches de blanc pour les textes et éléments clés. Cette combinaison rappelle le thème « dark mode » tout en restant lisible. On pourra suivre la recommandation d’utiliser un noir légèrement atténué (gris foncé) plutôt qu’un noir pur pour réduire la fatigue visuelle
smashingmagazine.com
. Le bleu choisi doit ressortir fortement (bon contraste) sur le fond sombre.
Typographie : police contemporaine sans-serif (ex. Roboto, Montserrat, Open Sans) assurant lisibilité et modernité. Les tailles de titres seront plus grandes, le corps de texte correctement contrasté. Comme conseillé, la typographie doit être lisible
mastercaweb.unistra.fr
.
Mise en page : design épuré, aéré, avec mise en avant des titres et blocs. L’agencement sera clair et centré. Les conseils d’ergonomie recommandent une « mise en page claire avec navigation intuitive »
mastercaweb.unistra.fr
.
Animations et interactivité : intégrer des animations CSS/Javascript douces (transitions au survol, apparition de sections en scroll, micro-interactions) pour dynamiser l’expérience sans surcharger. Par exemple, des effets de fade-in lors du scroll ou un menu burger animé en mobile. Ces animations légères apporteront du dynamisme sans nuire aux performances
mastercaweb.unistra.fr
.
Responsive / Mobile-first : le design sera pensé pour tous les écrans. Les maquettes suivront une approche responsive (grilles flexibles, media queries) afin d’être parfaitement lisibles sur mobile. Le site doit être responsive et optimisé pour mobile
mastercaweb.unistra.fr
, car une large part du public utilisera smartphones ou tablettes.
Dark mode friendly : en cohérence avec la charte sombre, veiller à de forts contrastes (textes blancs sur fond foncé) pour une bonne visibilité. On évitera d’utiliser uniquement la couleur comme information (texte animé, icônes contrastées, etc.). On s’assurera de respecter les critères WCAG (contraste minimal 4,5:1) afin que le contenu reste accessible à tous
blogs.articulate.com
smashingmagazine.com
.
Au final, l’identité visuelle mêlera sobriété et modernité : fond noir ou gris foncé, zones de texte claires, boutons ou liens en bleu, typos nettes et animations subtiles, pour un rendu « cool » et professionnel
mastercaweb.unistra.fr
smashingmagazine.com
.
Accessibilité et SEO
Le site devra être conforme aux bonnes pratiques d’accessibilité web (WCAG). Concrètement :
Perceptibilité : textes alternatifs (alt) pour toutes les images, bonnes pratiques de contraste (par ex. blanc sur gris foncé) et possibilité d’agrandir le texte. Éviter de véhiculer l’information uniquement par la couleur.
Navigation : structure sémantique (balises HTML5, titres hiérarchisés <h1>…<h2>), menu clavier-accessible, liens clairement identifiés.
Clarté du contenu : langage simple et navigation cohérente (liens repérables). Langue de la page bien définie (lang="fr").
Robustesse : code HTML/CSS valide (testé via validateur W3C), utilisation éventuelle de rôle ARIA pour les éléments complexes.
Ces principes s’alignent sur les quatre piliers WCAG (perceptible, utilisable, compréhensible, robuste)
blogs.articulate.com
. Ils garantiront que le portfolio reste accessible aux personnes en situation de handicap (lecture audio, agrandissement, etc.). Sur le plan SEO, le site one-page sera optimisé pour le référencement naturel :
Mots-clés : intégrer dans les titres/meta des mots-clés stratégiques (p.ex. « portfolio développeur web »)
mastercaweb.unistra.fr
.
Balises meta : titre de page et méta-description descriptifs incluant le nom et la fonction.
Liens et contenus : proposer des liens internes (ancres) vers chaque section et, si nécessaire, externes vers le projet de tontine ou le GitHub. Fournir des textes pertinents et des balises <meta> structurées
mastercaweb.unistra.fr
.
Performance : optimiser la vitesse de chargement (minification CSS/JS, images compressées). Un site rapide améliore l’expérience et le référencement
mastercaweb.unistra.fr
.
Adaptabilité mobile : comme souligné, un site mobile-friendly bénéficie aussi au SEO.
En combinant ces bonnes pratiques, le site sera à la fois lisible par les humains et bien indexé par les moteurs de recherche
